// Code generated by the codec package. DO NOT EDIT.

package codec

import (
	"github.com/jba/codec/codecapi"
	"time"
)

type time_Time_codec struct{}

func (c time_Time_codec) Init() {}

func (c time_Time_codec) Encode(e *codecapi.Encoder, x interface{}) { c.encode(e, x.(time.Time)) }

func (c time_Time_codec) encode(e *codecapi.Encoder, m time.Time) {
	data, err := m.MarshalBinary()
	if err != nil {
		codecapi.Fail(err)
	}
	e.EncodeBytes(data)
}

func (c time_Time_codec) Decode(d *codecapi.Decoder) interface{} {
	var x time.Time
	c.decode(d, &x)
	return x
}

func (c time_Time_codec) decode(d *codecapi.Decoder, p *time.Time) {
	data := d.DecodeBytes()
	if err := p.UnmarshalBinary(data); err != nil {
		codecapi.Fail(err)
	}
}

func init() { codecapi.Register(*new(time.Time), time_Time_codec{}) }
